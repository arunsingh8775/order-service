name: Build & Deploy Order Service

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ensure gradlew is executable (fix CRLF if needed)
        run: |
          if command -v dos2unix >/dev/null 2>&1; then :; else sudo apt-get update && sudo apt-get install -y dos2unix; fi
          dos2unix gradlew || true
          chmod +x gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # (Optional but helpful) Cache Gradle to speed up builds
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build JAR with Gradle
        run: ./gradlew --no-daemon clean build -x test

      - name: Copy files to VM
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VM_HOST }}
          username: opc
          key: ${{ secrets.VM_SSH_KEY }}
          source: "build/libs/*.jar,Dockerfile,docker-compose.yml"
          target: "~/order-service"

      - name: Deploy on VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: opc
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            set -e
            mkdir -p ~/order-service
            cd ~/order-service

            # Show docker/compose versions for quick diagnostics
            docker compose version || docker --version

            # Use explicit compose file to avoid 'no configuration file provided'
            docker compose -f docker-compose.yml down || true
            docker compose -f docker-compose.yml build --no-cache
            docker compose -f docker-compose.yml up -d

            echo "Deployment complete. Containers:"
            docker ps --format 'table {{.Names}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}'
